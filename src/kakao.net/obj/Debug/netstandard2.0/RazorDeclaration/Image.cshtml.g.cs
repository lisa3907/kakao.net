#pragma checksum "D:\github.com\lisa3907\kakao.net\src\kakao.net\Image.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "990a35886f23414924ef892b9c198d6294aeb6f9"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace kakao.net
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Kakao.Net.util;
    public class Image : BootStrapComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 5 "D:\github.com\lisa3907\kakao.net\src\kakao.net\Image.cshtml"
            
    [Parameter] private bool IsThumbnail { get; set; }
    [Parameter] private bool IsResponsive { get; set; }
    [Parameter] private bool IsRounded { get; set; }
    [Parameter] private Alignment Alignment { get; set; }
    [Parameter] private string Class { get; set; }
    string classname
    {
        get
        {
            var thumbnail = IsThumbnail ? "img-thumbnail" : null;
            var responsive = IsResponsive ? "img-fluid" : null;
            var rounded = IsRounded ? "rounded" : null;
            var alignment = GetAlignment();
            return $"{rounded} {thumbnail} {responsive} {alignment} {Class}";
        }
    }
    private string GetAlignment()
    {
        if (Alignment == Alignment.Left) return "float-left";
        if (Alignment == Alignment.Center) return "mx-auto d-block";
        if (Alignment == Alignment.Right) return "float-right";
        return null;
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
