#pragma checksum "D:\github.com\lisa3907\kakao.net\src\kakao.net\BlazorNav.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1a7891fa119884e6b8a64146ebc470d6a39b3956"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace kakao.net
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Kakao.Net.util;
    public class BlazorNav : BootStrapComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 7 "D:\github.com\lisa3907\kakao.net\src\kakao.net\BlazorNav.cshtml"
            
    private string classname
    {
        get
        {
            var vertical = IsVertical ? "flex-column" : null;
            var tabs = IsTabs ? "nav-tabs" : null;
            var pills = IsPills ? "nav-pills" : null;
            var fill = IsFill ? "nav-fill" : null;
            var navbar = IsNavbar ? "navbar-nav" : null;
            return $"nav {navbar} {tabs} {pills} {fill} {vertical} {GetAlignment()} {Class}";
        }
    }
    private string Tag
    {
        get
        {
            return IsList ? "ul" : "nav";
        }
    }

    [Parameter] private bool IsList { get; set; }
    [Parameter] private Alignment Alignment { get; set; } = Alignment.None;
    [Parameter] private bool IsVertical { get; set; }
    [Parameter] private bool IsTabs { get; set; }
    [Parameter] private bool IsPills { get; set; }
    [Parameter] private bool IsFill { get; set; }
    [Parameter] private bool IsNavbar { get; set; }
    [Parameter] private string Class { get; set; }
    [Parameter] private RenderFragment ChildContent { get; set; }

    private string GetAlignment()
    {
        if (Alignment == Alignment.Center) return "justify-content-center";
        if (Alignment == Alignment.Right) return "justify-content-end";
        return null;
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
