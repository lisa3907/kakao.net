#pragma checksum "D:\github.com\lisa3907\kakao.net\src\kakao.net\ListGroupItem.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7436ea1cacd2ebff5a34ef515c031d399135b87f"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace kakao.net
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Kakao.Net.util;
    public class ListGroupItem : BootStrapComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 8 "D:\github.com\lisa3907\kakao.net\src\kakao.net\ListGroupItem.cshtml"
            
    string classname
    {
        get
        {
            var disabled = IsDisabled && ListGroupType != ListGroupType.Button ? "disabled" : null;
            var active = IsActive ? "active" : null;
            var action = ListGroupType == ListGroupType.Button || ListGroupType == ListGroupType.Link ? "list-group-item-action" : null;
            var color = Color != Color.None ? $"list-group-item-{Color.ToDescriptionString()}" : null;
            return $"list-group-item {color} {action} {active} {disabled} {Class}";
        }
    }
    string Tag
    {
        get
        {
            switch(ListGroupType)
            {
                case ListGroupType.Button:
                    return "button";
                case ListGroupType.Link:
                    return "a";
                case ListGroupType.List:
                    return "li";
                default:
                    return "li";
            }
        }
    }
    [Parameter] private bool IsActive { get; set; }
    [Parameter] private bool IsDisabled { get; set; }
    [Parameter] private ListGroupType ListGroupType { get; set; } = ListGroupType.List;
    [Parameter] private Action<UIMouseEventArgs> OnClick { get; set; }
    [Parameter] private Color Color { get; set; } = Color.None;
    [Parameter] private string Class { get; set; }
    [Parameter] private RenderFragment ChildContent { get; set; }
    private void _onclick(UIMouseEventArgs e)
    {
        if (OnClick != null) OnClick(e);
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
